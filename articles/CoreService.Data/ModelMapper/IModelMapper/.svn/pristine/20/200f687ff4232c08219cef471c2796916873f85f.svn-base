

## **IModelMapper.Track&#60;TModel>(IModelEntry&#60;TModel> modelEntry) Method**

**.NET Standard 2.x |**  <a href="javascript:void(0)" class="dropdown">Current version (0.5.0-alpha) <img src="~/images/dropdown.png"/></a>

<div class="otherversions"  value="versdiv">

<a href="javascript:void(0)">0.5.0-alpha</a>

<a href="javascript:void(0)">0.5.1-alpha(current)</a>

</div>

追踪一个包含数据和状态的ModelEntry&#60;TModel>实例。
Tracks a ModelEntry&#60;TModel> instance including data and status.

 **Namespace:** Appeon.CoreService.Data

 **Assembly:** Appeon.CoreService.Data.dll

### **Syntax**

```c#
   public TModel Track<TModel>(IModelEntry<TModel> modelEntry);
```

**Type Parameters**

`TModel`

The type of a model class that conforms to Appeon's standard.

**Parameters**

`modelEntry` [Appeon.CoreService.Data.IModelEntry&#60;TModel>](../../IModelEntry2/IModelEntry.html)

一个包含数据和状态的ModelEntry实例。
A ModelEntry&#60;TModel> instance including data and status.

**Returns**

TModel

返回一个已被追踪的Model实例，该Model中包含ModelEntry实例中的数据。

Returns a tracked Model instance which includes the data in ModelEntry instance.

### **Remarks**

在执行SaveChanges Method时将根据Model中的定义以及数据的状态，自动执行相应的SQL DML，对数据进行新增、修改或者删除等操作。

When executing the SaveChanges method, it automatically executes the corresponding SQL DML according to the definition and data status in the Model, and perform CRUD operations.

当调用ModelMapper的多个追踪 Method后，追踪的先后顺序决定了实际执行数据库操作的先后顺序。
After calling multiple track methods of the ModelMapper, the order of the tracks determine the order of the actual operations to the database.

### **Examples**





### **Applies to**

.NET Standard 

2.x