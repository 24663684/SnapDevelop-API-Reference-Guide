

## **IModelMapper.TrackMaster&#60;TModel>(IModelEntry&#60;TModel> modelEntry) Method**

**.NET Standard 2.x |**  <a href="javascript:void(0)" class="dropdown">Current version (0.5.0-alpha) <img src="~/images/dropdown.png"/></a>

<div class="otherversions"  value="versdiv">
<a href="javascript:void(0)">0.5.0-alpha</a>

<a href="javascript:void(0)">0.5.1-alpha(current)</a>

</div>

When working with multiple models which have Master-Detail relationship，追踪一个对主数据库表的操作,由数据的状态决定如何选择insert, update or delete 操作，将被用来操纵数据库表的数据缓存于TModel中。当IModelMapper.SaveChanges被调用时，一条SQL INSERT, UPDATE or DELETE statement 将用缓存在TModel中的数据以及被定义在TModel中的映射信息来产生，并执行。

Tracks an insert, update or delete operation to the master table, when working with multiple models which are in the master-detail relationship. The data state determines which operation (insert, update or delete) to perform. The data to be manipulated is cached in TModel. When IModelMapper.SaveChanges is called, a SQL statement (INSERT, UPDATE or DELETE) will be first generated using the data cached in TModel and the mapping information defined in TModel, and then executed.

 **Namespace:** Appeon.CoreService.Data

 **Assembly:** Appeon.CoreService.Data.dll

### **Syntax**

```c#
  public IDetailTracker<TModel> TrackMaster<TModel>(IModelEntry<TModel> modelEntry);
```

**Type Parameters**

`TModel`

The type of a model class that conforms to the Appeon standard.

**Parameters**

`modelEntry` [Appeon.CoreService.Data.IModelEntry&#60;TModel>](../../IModelEntry2/IModelEntry.html)

一个包含Master Model的数据和数据状态的ModelEntry&#60;TModel>实例。

A ModelEntry&#60;TModel> instance which includes the data and state of the master model.

**Returns**

[Appeon.CoreService.Data.IDetailTracker&#60;TModel>](../../IDetailTracker/IDetailTracker.html)

一个可用于继续对detail model进行跟踪操作的接口。

An interface that can be used to track the detail model.

### **Remarks**

需要在TModel中定义ModelEmbedded attribute来表示Master-Detail relationship，具体参考ModelEmbedded中的相关说明。

The ModelEmbedded attribute must be defined in TModel to create the master-detail relationship. Refer to ModelEmbedded for more.

### **Examples**





### **Applies to**

.NET Standard 

2.x