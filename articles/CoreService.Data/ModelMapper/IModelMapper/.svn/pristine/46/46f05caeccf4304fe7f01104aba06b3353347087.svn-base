

## **IModelMapper.TrackInsert(ISqlInsertBuilder insertBuilder, params object[] parameters) 方法**

**.NET Standard 2.x |**  <a href="javascript:void(0)" class="dropdown">当前版本(0.5.0-alpha) <img src="~/images/dropdown.png"/></a>

<div class="otherversions"  value="versdiv">

<a href="javascript:void(0)">0.5.0-alpha</a>

<a href="javascript:void(0)">0.5.1-alpha(current)</a>

</div>

追踪一个用来 build SQL INSERT Statement的接口，并指定该SQL依赖的参数，用于在数据库中新增记录。

 **命名空间：** Appeon.CoreService.Data

 **程序集：** Appeon.CoreService.Data.dll

### **语法**

```c#
  public IModelMapper TrackInsert(ISqlInsertBuilder insertBuilder, params object[] parameters);
```

**Parameters**

`insertBuilder` [Appeon.CoreService.Data.ISqlInsertBuilder](../../ISqlInsertBuilder/ISqlInsertBuilder.html)

An interface used to build SQL INSERT Statement.

`parameters` System.Object[]

One or more values that you want to use as retrieval arguments in the SQL DELETE statement defined in insertBuilder.

**Returns**

[Appeon.CoreService.Data.IModelMapper](../../IModelMapper/IModelMapper.html)

返回一个IModelMapper接口，可以使用该接口继续使用当前ModelMapper实例执行其他方法。

### **备注**

当调用多个ModelMapper中用于追踪的方法后，追踪的先后顺序决定了SaveChanges方法在实际执行数据库操作时的先后顺序。

### **示例**



### **版本信息**

.Net Standard 

自2.x起可用