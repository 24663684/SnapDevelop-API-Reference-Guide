

## **IModelMapper.TrackCreate&#60;TModel>(TModel model) 方法**

**.NET Standard 2.x |**  <a href="javascript:void(0)" class="dropdown">当前版本(0.5.0-alpha) <img src="~/images/dropdown.png"/></a>

<div class="otherversions"  value="versdiv">

<a href="javascript:void(0)">0.5.0-alpha</a>

<a href="javascript:void(0)">0.5.1-alpha(current)</a>

</div>

追踪一个TModel实例, 用于在数据库中新增一行记录。
Tracks a TModel instance, used for adding a record to the database.

 **命名空间：** Appeon.CoreService.Data

 **程序集：** Appeon.CoreService.Data.dll

### **语法**

```c#
  public IModelMapper TrackCreate<TModel>(TModel model);
```

**Type Parameters**

`TModel`

The type of a model class that conforms to Appeon's standard.

**Parameters**

`model` TModel

用于新增一行记录的Model实例。
Used for adding a Model instance for the record.

**Returns**

[Appeon.CoreService.Data.IModelMapper](../../IModelMapper/IModelMapper.html)

返回一个IModelMapper接口，可以使用该接口继续使用当前ModelMapper实例执行其他方法。
Returns an IModelMapper interface, which can be used for executing other methods with the current ModelMapper instance.

### **备注**

在执行SaveChanges方法时，将根据Model中的更新规则以及数据，自动在数据库新增一行记录。
When executing the SaveChanges method, it automatically adds a record to the database according to the update rule of the Model and the data in it.

当调用多个ModelMapper中用于追踪的方法后，追踪的先后顺序决定了SaveChanges方法在实际执行数据库操作时的先后顺序。

After calling multiple track methods of the ModelMapper, the order of the tracks determine the order of the actual operations to the database.
### **示例**



### **版本信息**

.Net Standard 

自2.x起可用